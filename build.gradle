/*
 * Copyright (c) 2016.
 *
 * This file is part of kotlinsql.
 *
 * This file is licenced to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You should have received a copy of the license with the source distribution.
 * Alternatively, you may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


buildscript {

    ext {
        if (!rootProject.ext.has('kotlin_version')) {
            kotlin_version = '1.2.71'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2"
        }
    }
}


plugins {
    id "com.gradle.plugin-publish" version "0.10.0"
    id "com.jfrog.bintray" version "1.8.4"
    id 'maven-publish'
}

apply plugin: 'kotlin'
//apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

version = '0.5.12-SNAPSHOT'
group = 'net.devrieze'

bintray {
    user = project.findProperty('bintrayUser') ?: ''
    key = project.findProperty('bintrayApiKey') ?: ''
    publications = ['MyPublication']

    pkg {
        repo = 'maven'
        name = 'gradle-codegen'
        userOrg = 'pdvrieze'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/pdvrieze/gradle-codegen.git'

        version {
            name = project.version
            desc = 'Fixed when not using kotlin. Kotlin is now optionally supported.'
            released = new Date()
            vcsTag = "v$version"
            attributes = [ 'gradle-plugin': 'net.devrieze:gradle-codegen:net.devrieze.gradlecodegen' ]
        }
    }
}

compileKotlin {
    kotlinOptions {
        apiVersion = '1.2'
        languageVersion = '1.2'
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId 'gradle-codegen'

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

pluginBundle {
    website = 'https://github.com/pdvrieze/gradle-codegen.git'
    vcsUrl = 'https://github.com/pdvrieze/gradle-codegen.git'
    description = "A plugin to aid with codeGeneration without using buildSrc. It provides an additional generate section to sourceSets. In this section individual files to be generated can be specified. Each sourceset has an accompanying ...generator sourceSet where the actual generator source can live. See https://github.com/pdvrieze/gradle-codegen for documentation"
    tags = ['generate', 'codegen', 'code-generation']

    plugins {
        gradlecodegen {
            id = 'net.devrieze.gradlecodegen'
            displayName = 'Code generation plugin for gradle'
        }
    }

    mavenCoordinates {
        groupId = group
        artifactId = "gradle-codegen"
    }
}

dependencies {
    compile gradleApi()
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

task publishAll {
    group "publishing"
    dependsOn(bintrayUpload)
    dependsOn(publishPlugins)
}

repositories {
    jcenter()
}
